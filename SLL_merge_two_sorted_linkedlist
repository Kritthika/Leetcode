# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
    def __str__(self):
        current = self
        result =' '
        while current is not None:
            result += str(current.val)
            if current.next is not None:
                result += '->'
            current =current.next
        return result
class Solution(object):
    def __init__(self):
        self.head = None
    
    def mergeTwoLists(self, l1, l2):
        dummy = ListNode()
        current = dummy
        while l1 and l2:
            if l1.val < l2.val:
                current.next = l1
                l1 = l1.next
            else:
                current.next = l2
                l2 = l2.next
            current = current.next
        if l1:
            current.next = l1
        elif l2:
            current.next = l2
        return dummy.next

list1 = ListNode(1)
list1.next = ListNode(3)
list1.next.next = ListNode(5)

list2 = ListNode(2)
list2.next = ListNode(4)
list2.next.next = ListNode(6)
solution = Solution()
merged_head = solution.mergeTwoLists(list1,list2)
print(merged_head)
